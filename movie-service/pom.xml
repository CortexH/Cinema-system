<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>br.com.cinemaSYS</groupId>
		<artifactId>Sistema-cinema</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<groupId>com.example.movie-service</groupId>
	<artifactId>movie-service</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<name>movie-service</name>
	<description>Serviço que gerencia os filmes e parte das sessões</description>

	<properties>
		<java.version>21</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
		</dependency>
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-avro-serializer</artifactId>
		</dependency>
		<dependency>
			<groupId>br.com.cinemaSYS</groupId>
			<artifactId>cinema-contracts</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>5.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.6.1</version> <!-- Use a versão mais recente compatível -->
				<executions>
					<execution>
						<id>unpack-avro-schemas</id>
						<!-- Fase onde ele roda: antes de compilar -->
						<phase>generate-sources</phase>
						<goals>
							<!-- O que ele faz: descompacta -->
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<!-- Qual JAR descompactar -->
									<groupId>br.com.cinemaSYS</groupId> <!-- GroupId do seu pai/contratos -->
									<artifactId>cinema-contracts</artifactId>
									<version>${project.version}</version> <!-- Pega a versão do projeto atual -->
									<type>jar</type>
									<overWrite>true</overWrite> <!-- Sobrescreve se já existir -->
									<!-- Onde colocar os arquivos extraídos -->
									<outputDirectory>${project.build.directory}/dependency-avro</outputDirectory>
									<!-- O que incluir daquele JAR (só arquivos .avsc) -->
									<includes>**/*.avsc</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- =========================================================== -->
			<!-- PLUGIN 2: GERAR CÓDIGO JAVA A PARTIR DOS .avsc EXTRAÍDOS   -->
			<!-- =========================================================== -->
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>1.11.4</version> <!-- Versão consistente com a dependência avro -->
				<executions>
					<execution>
						<id>generate-avro-sources</id> <!-- ID da execução -->
						<!-- Fase onde ele roda: mesma do unpack -->
						<phase>generate-sources</phase>
						<goals>
							<!-- O que ele faz: gera código a partir de esquemas -->
							<goal>schema</goal>
						</goals>
						<configuration>
							<!-- Onde ler os .avsc (pasta onde o plugin anterior extraiu) -->
							<sourceDirectory>${project.build.directory}/dependency-avro/</sourceDirectory>
							<!-- Onde gerar o código .java -->
							<outputDirectory>${project.build.directory}/generated-sources/avro/</outputDirectory>
							<!-- Usa String em vez de Utf8 (mais fácil) -->
							<stringType>String</stringType>
							<!-- Se quiser usar Records Java 16+, descomente -->
							<!-- <enableDecimalLogicalType>true</enableDecimalLogicalType> -->
							<!-- <specificRecordGeneration>true</specificRecordGeneration> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<id>add-avro-source</id>

						<phase>generate-sources</phase>
						<goals>
							<!-- O que ele faz: adiciona um diretório como fonte -->
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<!-- Qual diretório adicionar (onde o avro-plugin gerou) -->
								<source>${project.build.directory}/generated-sources/avro/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
